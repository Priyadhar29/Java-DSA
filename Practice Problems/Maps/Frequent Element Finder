Problem
Write a program that reads an array of N integer values and identifies the element that has occurred the most number of times.

Input Format
The first line contains a single integer N, the number of elements in the array. The second line contains N space-separated integers, the elements of the array.

Output Format
Print a single integer, the most frequent element in the array. If there are multiple such elements, print the one that appeared first.

Sample Inputs & Outputs
Sample Input 1

7
1 2 3 2 4 3 5
Sample Output 1

2
Sample Input 2

10
4 5 9 11 9 4 8 15 8 6
Sample Output 2

4
Constraints
1 ≤ N ≤ 10,000 -10^9 ≤ Array elements ≤ 10^9

Code:

import java.util.LlinkedHashMap;
import java.util.Set;
import java.util.Map.Entry;
import java.util.Scanner;

public class main{
  public static void main(String[]args){
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] arr = new int[n];
    for(int i=0;i<n;i++){
       arr[i] = sc.nextInt();
    }
    freElement(arr);
  }
  public static void freElement(int[] arr){
    LinkedHashMap<Integer, Integer> map = new LinkedHashMap<>();
    for(int i=0;i<arr.length;i++){
      map.put(arr[i], map.getOrDefault(arr[i],0)+1);
    }
    int count = 0;
    int ans = 0;
    Set<Entry<Integer, Integer>> entries = map.entrySet();
    for(Entry<Integer, Integer> entry : entries){
      if(entry.getValue() > count){
       count = entry.getValue();
       ans = entry.getKey();
      }
    }
    System.out.print(ans);
  }
}
