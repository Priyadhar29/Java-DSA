Problem
Develop a program that takes an array of N integer values and calculates how many pairs of the same element can be formed.

Input Format
The first line contains a single integer N, the number of elements in the array. The second line contains N space-separated integers, the elements of the array.

Output Format
Print a single integer, the total number of pairs that can be formed with the elements in the array. Each element can only be used in one pair.

Sample Inputs & Outputs
Sample Input 1

6
1 2 1 2 1 2
Sample Output 1

2
Sample Input 2

5
3 3 3 3 3
Sample Output 2

2
Constraints
1 ≤ N ≤ 10,000
-10^9 ≤ Array elements ≤ 10^9

Code:

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Read the number of elements in the array
        int n = scanner.nextInt();
        int[] arr = new int[n];
        
        // Read the elements of the array
        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }
        
        // Count occurrences of each integer
        Map<Integer, Integer> countMap = new HashMap<>();
        for (int num : arr) {
            countMap.put(num, countMap.getOrDefault(num, 0) + 1);
        }
        
        // Calculate the total number of pairs
        int totalPairs = 0;
        for (int count : countMap.values()) {
            totalPairs += count / 2; // Each pair requires 2 of the same element
        }
        
        // Print the result
        System.out.println(totalPairs);
        
        scanner.close();
    }
}
