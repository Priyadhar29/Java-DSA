Day 17: Insertion Sort and Selection Sort 📅

Insertion Sort 🔄
Description: A simple sorting algorithm that builds a sorted array one element at a time by repeatedly taking the next unsorted element and inserting it into the correct position in the sorted part.

Example:

Input: [5, 2, 4, 6, 1, 3]

Steps:
Start with [5]
Insert 2: [2, 5]
Insert 4: [2, 4, 5]
Insert 6: [2, 4, 5, 6]
Insert 1: [1, 2, 4, 5, 6]
Insert 3: [1, 2, 3, 4, 5, 6]

Time Complexity: ⏰

Best-case: O(n)
Average-case: O(n²)
Worst-case: O(n²)
Space Complexity: 📦 O(1)

Selection Sort 🔄
Description: A simple sorting algorithm that divides the input into a sorted and an unsorted region. It repeatedly selects the smallest (or largest) element from the unsorted region and moves it to the end of the sorted region.

Example:

Input: [5, 2, 4, 6, 1, 3]

Steps:
Select 1: [1, 2, 4, 6, 5, 3]
Select 2: [1, 2, 4, 6, 5, 3] (no change)
Select 3: [1, 2, 3, 6, 5, 4]
Select 4: [1, 2, 3, 4, 6, 5]
Select 5: [1, 2, 3, 4, 5, 6]

Time Complexity: ⏰

Best-case: O(n²)
Average-case: O(n²)
Worst-case: O(n²)
Space Complexity: 📦 O(1)
